#pragma once

#include <cstdint>

enum class Opcode : uint8_t {
    NOP = 0x00,
    LD_BC_D16,
    LD_ADDR_BC_A,
    INC_BC,
    INC_B,
    DEC_B,
    LD_B_D8,
    RLCA,
    LD_ADDR_A16_SP,
    ADD_HL_BC,
    LD_A_ADDR_BC,
    DEC_BC,
    INC_C,
    DEC_C,
    LD_C_D8,
    RRCA,

    STOP = 0X10,
    LD_DE_D16,
    LD_ADDR_DE_A,
    INC_DE,
    INC_D,
    DEC_D,
    LD_D_D8,
    RLA,
    JR_R8,
    ADD_HL_DE,
    LD_A_ADDR_DE,
    DEC_DE,
    INC_E,
    DEC_E,
    LD_E_D8,
    RRA,

    JR_NZ_R8 = 0X20,
    LD_HL_D16,
    LD_ADDR_HLI_A,
    INC_HL,
    INC_H,
    DEC_H,
    LD_H_D8,
    DAA,
    JR_Z_R8,
    ADD_HL_HL,
    LD_A_ADDR_HLI,
    DEC_HL,
    INC_L,
    DEC_L,
    LD_L_D8,
    CPL,

    JR_NC_R8 = 0X30,
    LD_SP_D16,
    LD_ADDR_HLD_A,
    INC_SP,
    INC_ADDR_HL,
    DEC_ADDR_HL,
    LD_ADDR_HL_D8,
    SCF,
    JR_C_R8,
    ADD_HL_SP,
    LD_A_ADDR_HLD,
    DEC_SP,
    INC_A,
    DEC_A, 
    LD_A_D8,
    CCF,

    LD_B_B = 0X40,
    LD_B_C,
    LD_B_D,
    LD_B_E,
    LD_B_H,
    LD_B_L,
    LD_B_ADDR_HL,
    LD_B_A,
    LD_C_B,
    LD_C_C,
    LD_C_D,
    LD_C_E,
    LD_C_H,
    LD_C_L,
    LD_C_ADDR_HL,
    LD_C_A,

    LD_D_B = 0X50,
    LD_D_C,
    LD_D_D,
    LD_D_E,
    LD_D_H,
    LD_D_L,
    LD_D_ADDR_HL,
    LD_D_A,

    LD_E_B,
    LD_E_C,
    LD_E_D,
    LD_E_E,
    LD_E_H,
    LD_E_L,
    LD_E_ADDR_HL,
    LD_E_A,

    LD_H_B = 0X60,
    LD_H_C,
    LD_H_D,
    LD_H_E,
    LD_H_H,
    LD_H_L,
    LD_H_ADDR_HL,
    LD_H_A,
    LD_L_B,
    LD_L_C,
    LD_L_D,
    LD_L_E,
    LD_L_H,
    LD_L_L,
    LD_L_ADDR_HL,
    LD_L_A,

    LD_ADDR_HL_B = 0X70,
    LD_ADDR_HL_C,
    LD_ADDR_HL_D,
    LD_ADDR_HL_E,
    LD_ADDR_HL_H,
    LD_ADDR_HL_L,
    HALT,
    LD_ADDR_HL_A,
    LD_A_B,
    LD_A_C,
    LD_A_D,
    LD_A_E,
    LD_A_H,
    LD_A_L,
    LD_A_ADDR_HL,
    LD_A_A,

    ADD_A_B = 0X80,
    ADD_A_C,
    ADD_A_D,
    ADD_A_E,
    ADD_A_H,
    ADD_A_L,
    ADD_A_ADDR_HL,
    ADD_A_A,

    ADC_A_B,
    ADC_A_C,
    ADC_A_D,
    ADC_A_E,
    ADC_A_H,
    ADC_A_L, 
    ADC_A_ADDR_HL,
    ADC_A_A,

    SUB_B = 0X90,
    SUB_C,
    SUB_D,
    SUB_E,
    SUB_H,
    SUB_L,
    SUB_ADDR_HL,
    SUB_A,
    
    SBC_A_B,
    SBC_A_C,
    SBC_A_D,
    SBC_A_E,
    SBC_A_H,
    SBC_A_L,
    SBC_A_ADDR_HL,
    SBC_A_A,

    AND_B = 0XA0,
    AND_C,
    AND_D,
    AND_E,
    AND_H,
    AND_L,
    AND_ADDR_HL,
    AND_A,
    
    XOR_B,
    XOR_C,
    XOR_D,
    XOR_E,
    XOR_H,
    XOR_L,
    XOR_ADDR_HL,
    XOR_A,

    OR_B = 0XB0,
    OR_C,
    OR_D,
    OR_E,
    OR_H,
    OR_L,
    OR_ADDR_HL,
    OR_A,

    CP_B,
    CP_C,
    CP_D,
    CP_E,
    CP_H,
    CP_L,
    CP_ADDR_HL,
    CP_A,

    RET_NZ = 0XC0,
    POP_BC,
    JP_NZ_A16,
    JP_A16,
    CALL_NZ_A16,
    PUSH_BC,
    ADD_A_D8,
    RST_00H,
    RET_Z,
    RET,
    JP_Z_A16,
    PREFIX_CB,
    CALL_Z_A16,
    CALL_A16,
    
    ADC_A_D8,
    RST_08H,

    RET_NC = 0XD0,
    POP_DE,
    JP_NC_A16,

    CALL_NC_A16 = 0XD4,
    PUSH_DE,
    SUB_D8,
    RST_10H,
    RET_C,
    RETI,
    JP_C_A16,

    CALL_C_A16 = 0XDC,

    SBC_A_D8 = 0XDE,
    RST_18H,

    LDH_ADDR_A8_A = 0XE0,
    POP_HL,
    LD_ADDR_C_A,

    PUSH_HL = 0XE5,
    AND_D8,
    RST_20H,
    ADD_SP_R8,
    JP_ADDR_HL,
    LD_ADDR_A16_A,

    XOR_D8 = 0XEE,
    RST_28H,

    LDH_A_ADDR_A8 = 0XF0,
    POP_AF,
    LD_A_ADDR_C,
    DI,

    PUSH_AF = 0XF5,
    OR_D8,
    RST_30H,
    LD_HL_SPR8,
    LD_SP_HL,
    LD_A_ADDR_A16,
    EI,

    CP_D8 = 0XFE,
    RST_38H    
};